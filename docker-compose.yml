version: '3.8'

services:
  fastapi-auth:
    build:
      context: ../fastapi-auth
      dockerfile: Dockerfile
    container_name: fastapi-auth-up-all
    ports:
      - "8000:8000"
    env_file:
      - ../fastapi-auth/.env
    networks:
      - services

  spreadsheet-importer:
    build:
      context: ../spreadsheet-importer
      dockerfile: Dockerfile
    container_name: spreadsheet-importer-up-all
    ports:
      - "8001:8001"
    networks:
      - services
      - rabbitmq-network
    depends_on:
      - db

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: spreadsheet_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - services

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-up-all
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    env_file:
      - ../notification-service/.env
    networks:
      - rabbitmq-network

  notification-service:
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    container_name: notification-service-up-all
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    env_file:
      - ../notification-service/.env
    networks:
      - rabbitmq-network

  planilha-frontend:
    build:
      context: ../planilha-frontend
      dockerfile: Dockerfile
    container_name: planilha-frontend-up-all
    ports:
      - "3000:80"
    env_file:
      - ../planilha-frontend/.env
    networks:
      - services

networks:
  services:
    external: true
  rabbitmq-network:
    external: true

volumes:
  postgres_data: